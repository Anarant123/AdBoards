<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile>AdBoards.Desktop/AdBoards.Desktop.csproj</projectFile>
    <projectFile profileName="IIS Express">AdBoards.WebAPI/AdBoards.WebAPI.csproj</projectFile>
    <projectFile profileName="http">AdBoards.WebAPI/AdBoards.WebAPI.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f44ea9c1-09f3-4c71-b50d-bc19fb5551e2" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/AdBoards.ApiClient.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/OnlineMarket.ApiClient.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/AdBoardsApiClient.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/AdBoardsApiClient.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Requests/AddAdModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Requests/AddAdModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Requests/EditPersonModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Requests/EditPersonModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Requests/PersonReg.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Requests/PersonReg.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Ad.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Ad.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/AdType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/AdType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/AuthorizedModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/AuthorizedModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Category.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Category.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Complaint.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Complaint.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Error.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Error.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Favorite.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Favorite.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Person.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Person.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Contracts/Responses/Right.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Contracts/Responses/Right.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Extensions/AdExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Extensions/AdExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Extensions/ComplaintExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Extensions/ComplaintExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Extensions/FavoritesExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Extensions/FavoritesExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.ApiClient/Extensions/PeopleExtensions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.ApiClient/Extensions/PeopleExtensions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/AdBoards.Desktop.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/OnlineMarket.Desktop.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/AdminWindow.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/AdminWindow.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/AdminWindow.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/AdminWindow.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/App.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/App.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/App.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/App.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/AssemblyInfo.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/AssemblyInfo.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/LoadImage.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/LoadImage.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/MainWindow.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/MainWindow.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/MainWindow.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/MainWindow.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Models/db/AdListViewModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Models/db/AdListViewModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Models/db/Context.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Models/db/Context.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_edit.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_edit.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_favorites.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_favorites.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_image.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_image.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_image_person.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_image_person.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_loop.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_loop.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_mail.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_mail.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_map_location.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_map_location.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_my_ads.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_my_ads.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_person.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_person.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_phone.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_phone.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_plus.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_plus.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable/icon_price.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable/icon_price.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_edit.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_edit.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_favorites.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_favorites.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_image.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_image.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_image_person.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_image_person.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_loop.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_loop.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_mail.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_mail.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_map_location.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_map_location.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_my_ads.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_my_ads.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_person.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_person.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_phone.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_phone.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_plus.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_plus.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/drawable0/icon_price.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/drawable0/icon_price.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/logo.ico" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/logo.ico" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Resources/logo.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Resources/logo.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AddAdPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AddAdPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AddAdPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AddAdPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdminAdPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdminAdPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdminAdPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdminAdPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdminPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdminPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdminPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdminPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdsPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdsPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AdsPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AdsPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AuthorizationPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AuthorizationPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/AuthorizationPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/AuthorizationPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/ComplainPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/ComplainPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/ComplainPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/ComplainPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/FavoritesAdsPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/FavoritesAdsPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/FavoritesAdsPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/FavoritesAdsPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/MyAdPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/MyAdPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/MyAdPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/MyAdPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/MyAdsPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/MyAdsPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/MyAdsPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/MyAdsPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/ProfilePage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/ProfilePage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/ProfilePage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/ProfilePage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/RecoveryPasswordPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/RecoveryPasswordPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/RecoveryPasswordPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/RecoveryPasswordPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/RegistrationPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/RegistrationPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/RegistrationPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/RegistrationPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/StatsPage.xaml" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/StatsPage.xaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Desktop/Views/StatsPage.xaml.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Desktop/Views/StatsPage.xaml.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Domain/AdBoards.Domain.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Domain/OnlineMarket.Domain.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Domain/Auth/LoginResult.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Domain/Auth/LoginResult.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.Domain/Enums/RoleType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.Domain/Enums/RoleType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/AdBoards.WebAPI.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/OnlineMarket.WebAPI.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Auth/Policies.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Auth/Policies.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Contracts/Requests/Models/AddAdModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Contracts/Requests/Models/AddAdModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Contracts/Requests/Models/RegisterModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Contracts/Requests/Models/RegisterModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Contracts/Requests/Models/UpdateAdModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Contracts/Requests/Models/UpdateAdModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Contracts/Requests/Models/UpdatePersonModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Contracts/Requests/Models/UpdatePersonModel.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Contracts/Responses/AdDto.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Contracts/Responses/AdDto.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Contracts/Responses/Error.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Contracts/Responses/Error.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/AdBoardsContext.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/AdBoardsContext.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/FileManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/FileManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/Ad.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/Ad.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/AdType.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/AdType.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/Category.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/Category.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/Complaint.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/Complaint.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/Favorite.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/Favorite.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/Person.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/Person.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Data/Models/Role.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Data/Models/Role.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Extensions/AdEndpoints.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Extensions/AdEndpoints.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Extensions/ComplaintEndpoints.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Extensions/ComplaintEndpoints.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Extensions/FavoritesEndpoints.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Extensions/FavoritesEndpoints.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Extensions/PeopleEndpoints.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Extensions/PeopleEndpoints.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Options/JwtOptions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Options/JwtOptions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Options/SmtpOptions.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Options/SmtpOptions.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Program.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/Properties/launchSettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/Properties/launchSettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/appsettings.Development.json" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/appsettings.Development.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/appsettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/wwwroot/images/ad/icon_image.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/wwwroot/images/ad/icon_image.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.WebAPI/wwwroot/images/user/icon_image_person.png" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.WebAPI/wwwroot/images/user/icon_image_person.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/AdBoards.sln" beforeDir="false" afterPath="$PROJECT_DIR$/OnlineMarket.sln" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "Anarant123"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="dfd3a9b1-d699-4617-a0ba-ce247427e6ad" />
        <option name="url" value="https://github.com/Anarant123/AdBoards.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="Toolset" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2cd52MDaZvtNgYxyVIvarXGOuR3" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;rider.external.source.directories&quot;: [
      &quot;C:\\Users\\Михаил Сафронов\\AppData\\Roaming\\JetBrains\\Rider2023.2\\resharper-host\\DecompilerCache&quot;,
      &quot;C:\\Users\\Михаил Сафронов\\AppData\\Roaming\\JetBrains\\Rider2023.2\\resharper-host\\SourcesCache&quot;,
      &quot;C:\\Users\\Михаил Сафронов\\AppData\\Local\\Symbols\\src&quot;
    ]
  }
}</component>
  <component name="RunManager" selected=".NET Project.AdBoards.Desktop">
    <configuration name="AdBoards.Desktop" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/OnlineMarket.Desktop/OnlineMarket.Desktop.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="AdBoards.WebAPI: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/OnlineMarket.WebAPI/OnlineMarket.WebAPI.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="AdBoards.WebAPI: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/OnlineMarket.WebAPI/OnlineMarket.WebAPI.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net7.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f44ea9c1-09f3-4c71-b50d-bc19fb5551e2" name="Changes" comment="" />
      <created>1708428409905</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1708428409905</updated>
      <workItem from="1708428411440" duration="26000" />
      <workItem from="1708456118369" duration="429000" />
      <workItem from="1708457920700" duration="109000" />
      <workItem from="1708458046727" duration="199000" />
      <workItem from="1708588351150" duration="163000" />
      <workItem from="1708588533456" duration="487000" />
      <workItem from="1709036795075" duration="177000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="0d14af">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/AdBoards.ApiClient/AdBoards.ApiClient.csproj" />
                </list>
              </option>
              <option name="id" value="0d14af" />
              <option name="initiateTms" value="1708588590595" />
              <option name="request" value="Нужно написать REST API агрегатор новостей. &#10;1)&#9;Пользователь подает на вход адрес новостного сайта или его RSS-ленты&#10;2)&#9;База данных агрегатора начинает пополняться новостями с этого сайта&#10;3)&#9;У пользователя есть возможность просматривать список новостей из базы и искать их по подстроке в теле и/или в заголовке новости. &#10;Результат: Docker Compose, накатить миграцию, не менее 2х рабочих адресов новостных сайтов для проверки. &#10;Стек: C#, PostgreSQL 14, EF, Docker&#10;&#10;&#10;есть идеи как это реализовать?" />
              <option name="response" value="" />
              <option name="responseDescription" value="Да, у меня есть несколько идей о том, как реализовать агрегатор новостей с использованием указанного стека технологий. Вот общий план:&#10;&#10;1. Создайте новый проект ASP.NET Core Web API, используя шаблон проекта &quot;Empty&quot;.&#10;2. Добавьте необходимые пакеты NuGet для работы с PostgreSQL и Entity Framework Core.&#10;3. Создайте модели данных для новостей и базы данных. Например, модель &quot;News&quot; с полями &quot;Title&quot;, &quot;Content&quot;, &quot;Source&quot; и &quot;PublicationDate&quot;.&#10;4. Создайте контекст базы данных, который будет наследоваться от класса DbContext и содержать DbSet для модели &quot;News&quot;.&#10;5. Настройте подключение к базе данных PostgreSQL в файле appsettings.json.&#10;6. Создайте миграции и примените их для создания таблицы новостей в базе данных.&#10;7. Реализуйте контроллеры и действия для выполнения следующих операций:&#10;   - Добавление новостей в базу данных на основе адреса новостного сайта или его RSS-ленты.&#10;   - Получение списка новостей из базы данных.&#10;   - Поиск новостей по подстроке в заголовке или содержимом новости.&#10;8. Реализуйте сервисы, которые будут выполнять операции добавления новостей и поиска в базе данных.&#10;9. Настройте Docker Compose для запуска приложения и базы данных PostgreSQL в контейнерах Docker.&#10;10. Запустите приложение и проверьте его работу, используя адреса новостных сайтов для добавления новостей и поиска.&#10;&#10;Это общий план, который можно детализировать и доработать в соответствии с вашими требованиями и предпочтениями. Если у вас есть конкретные вопросы или нужна помощь с определенной частью реализации, пожалуйста, уточните." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1708588601347" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/AdBoards.ApiClient/AdBoards.ApiClient.csproj" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="cbe1f1">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/AdBoards.ApiClient/AdBoards.ApiClient.csproj" />
                </list>
              </option>
              <option name="id" value="cbe1f1" />
              <option name="initiateTms" value="1708588650340" />
              <option name="request" value="что такое Rss лента?" />
              <option name="response" value="" />
              <option name="responseDescription" value="RSS (Really Simple Syndication) - это формат данных, который используется для синдикации контента, такого как новости, статьи, блоги и другие типы информации. RSS-лента представляет собой структурированный XML-документ, который содержит заголовки, описания и ссылки на контент.&#10;&#10;RSS-ленты позволяют пользователям подписываться на обновления контента с различных веб-сайтов и получать уведомления о новых публикациях. Вместо того, чтобы посещать каждый сайт отдельно, пользователь может использовать RSS-агрегаторы или читалки новостей, чтобы просматривать и читать новости из разных источников в одном месте.&#10;&#10;Для вашего агрегатора новостей вы можете использовать RSS-ленты для получения новостей с различных новостных сайтов. Пользователь будет иметь возможность подать на вход адрес новостного сайта или его RSS-ленты, и ваше приложение будет извлекать новости из этих лент и сохранять их в базе данных для дальнейшего просмотра и поиска." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1708588655377" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/AdBoards.ApiClient/AdBoards.ApiClient.csproj" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="greeting">
          <value>
            <ChatHistoryModel>
              <option name="id" value="greeting" />
              <option name="initiateTms" value="1708588548765" />
              <option name="request" value="" />
              <option name="response" value="" />
              <option name="responseDescription" value="&#10;Hello, I am Machinet AI - context aware chat, which can help you with your daily programming routine. How can I help?" />
              <option name="responseTms" value="1708588550681" />
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>